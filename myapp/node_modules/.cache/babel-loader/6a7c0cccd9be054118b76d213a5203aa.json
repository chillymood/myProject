{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chill\\\\OneDrive\\\\\\u684C\\u9762\\\\Project\\\\myapp\\\\src\\\\pages\\\\write\\\\index.js\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { LoginWrapper, LoginBox, Input, Button, Textarea, Dialog } from \"./style\";\nimport { actionCreators } from \"./store\";\nimport { Link } from \"react-router-dom\";\n\nclass Write extends PureComponent {\n  render() {\n    const {\n      postArticle,\n      postStatus,\n      renewPostStatus,\n      login\n    } = this.props;\n\n    if (login) {\n      return /*#__PURE__*/React.createElement(LoginWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoginBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"\\u6A19\\u984C\",\n        ref: dom => {\n          this.title = dom;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"\\u6B32\\u63D2\\u5165\\u4E4B\\u5716\\u7247\\u7DB2\\u5740 http://............\",\n        ref: dom => {\n          this.imgUrl = dom;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Textarea, {\n        placeholder: \"\\u6587\\u7AE0\\u5167\\u5BB9\",\n        ref: dom => {\n          this.content = dom;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          return postArticle(this.title.value, this.content.value, this.imgUrl.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"\\u767C\\u8868\\u6587\\u7AE0\"), postStatus == 1 ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dialog, {\n        onClick: () => renewPostStatus(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"\\u767C\\u8868\\u6210\\u529F\\uFF0C\\u9EDE\\u64CA\\u8DF3\\u8F49\")) : null, postStatus == 2 ? /*#__PURE__*/React.createElement(Dialog, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }\n      }, \"\\u767C\\u8868\\u5931\\u6557\\uFF0C\\u518D\\u8A66\\u4E00\\u6B21\") : null));\n    } else {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  postStatus: state.getIn([\"write\", \"postStatus\"]),\n  login: state.getIn([\"login\", \"login\"])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postArticle(title, content, imgUrl) {\n    dispatch(actionCreators.postArticle(title, content, imgUrl));\n  },\n\n  renewPostStatus() {\n    dispatch(actionCreators.postArticleAction(0));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Write);","map":{"version":3,"sources":["C:/Users/chill/OneDrive/桌面/Project/myapp/src/pages/write/index.js"],"names":["React","PureComponent","connect","Redirect","LoginWrapper","LoginBox","Input","Button","Textarea","Dialog","actionCreators","Link","Write","render","postArticle","postStatus","renewPostStatus","login","props","dom","title","imgUrl","content","value","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","postArticleAction"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LoginWrapper, LoginBox, Input, Button,Textarea,Dialog } from \"./style\";\r\nimport { actionCreators } from \"./store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Write extends PureComponent {\r\n  render() {\r\n    const { postArticle, postStatus, renewPostStatus, login } = this.props;\r\n    if (login) {\r\n      return (\r\n        <LoginWrapper>\r\n          <LoginBox>\r\n            <Input\r\n              placeholder=\"標題\"\r\n              ref={(dom) => {\r\n                this.title = dom;\r\n              }}\r\n            />\r\n            <Input\r\n              placeholder=\"欲插入之圖片網址 http://............\"\r\n              ref={(dom) => {\r\n                this.imgUrl = dom;\r\n              }}\r\n            />\r\n            <Textarea\r\n              placeholder=\"文章內容\"\r\n              ref={(dom) => {\r\n                this.content = dom;\r\n              }}\r\n            />\r\n            <Button\r\n              onClick={() => {\r\n\r\n                return postArticle(\r\n                  this.title.value,\r\n                  this.content.value,\r\n                  this.imgUrl.value\r\n                )\r\n              }\r\n              }\r\n            >\r\n              發表文章\r\n            </Button>\r\n            {postStatus==1? (\r\n              <Link to=\"/\">\r\n                <Dialog onClick={()=>renewPostStatus()}>發表成功，點擊跳轉</Dialog>\r\n              </Link>\r\n            ) : null}\r\n            {postStatus == 2 ? <Dialog>發表失敗，再試一次</Dialog> : null}\r\n          </LoginBox>\r\n        </LoginWrapper>\r\n      );\r\n       \r\n    \r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postStatus: state.getIn([\"write\", \"postStatus\"]),\r\n  login: state.getIn([\"login\",\"login\"])\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postArticle(title, content, imgUrl) {\r\n    dispatch(actionCreators.postArticle(title, content, imgUrl))\r\n  },\r\n  renewPostStatus() {\r\n    dispatch(actionCreators.postArticleAction(0))\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Write);\r\n"]},"metadata":{},"sourceType":"module"}