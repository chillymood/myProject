{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chill\\\\myapp\\\\src\\\\TodoList.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      list: []\n    };\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  handleKeyUp(e) {\n    console.log(e.keyCode);\n\n    if (e.keyCode === 13) {\n      let list = [...this.state.list, this.state.inputValue];\n      this.setState({\n        list,\n        inputValue: ''\n      });\n    }\n  }\n\n  handleItemClick(index) {\n    let list = [...this.state.list];\n    list.s;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.handleInputChange.bind(this),\n      onKeyUp: this.handleKeyUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, this.state.list.map((value, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: this.handleItemClick.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, value);\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/chill/myapp/src/TodoList.js"],"names":["React","Component","Fragment","TodoList","constructor","props","state","inputValue","list","handleInputChange","e","setState","target","value","handleKeyUp","console","log","keyCode","handleItemClick","index","s","render","bind","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AACDC,EAAAA,iBAAiB,CAACC,CAAD,EAAI;AACnB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,UAAU,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAvB,KAAd;AACD;;AAEDC,EAAAA,WAAW,CAACJ,CAAD,EAAI;AACbK,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACO,OAAd;;AACA,QAAIP,CAAC,CAACO,OAAF,KAAc,EAAlB,EAAsB;AACpB,UAAIT,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqB,KAAKF,KAAL,CAAWC,UAAhC,CAAX;AACA,WAAKI,QAAL,CAAc;AAACH,QAAAA,IAAD;AAAMD,QAAAA,UAAU,EAAC;AAAjB,OAAd;AACD;AACF;;AAEDW,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,QAAIX,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAX;AACAA,IAAAA,IAAI,CAACY,CAAL;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,UAAzB;AACE,MAAA,QAAQ,EAAE,KAAKE,iBAAL,CAAuBa,IAAvB,CAA4B,IAA5B,CADZ;AAEE,MAAA,OAAO,EAAE,KAAKR,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKhB,KAAL,CAAWE,IAAX,CAAgBe,GAAhB,CAAoB,CAACV,KAAD,EAAQM,KAAR,KAAiB;AACnC,0BACE;AAAI,QAAA,GAAG,EAAEA,KAAT;AACE,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqBI,IAArB,CAA0B,IAA1B,EAAgCH,KAAhC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACoDN,KADpD,CADF;AAIH,KALC,CAFJ,CALF,CADF;AAkBD;;AA7C8B;;AAgDjC,eAAeV,QAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      list: []\n    }\n  }\n  handleInputChange(e) {\n    this.setState({ inputValue: e.target.value });\n  }\n\n  handleKeyUp(e) {\n    console.log(e.keyCode)\n    if (e.keyCode === 13) {\n      let list = [...this.state.list, this.state.inputValue]\n      this.setState({list,inputValue:''})\n    }   \n  }\n\n  handleItemClick(index) {\n    let list = [...this.state.list]\n    list.s\n  }\n\n\n  render() {\n    return (\n      <Fragment>\n        <input value={this.state.inputValue}\n          onChange={this.handleInputChange.bind(this)}\n          onKeyUp={this.handleKeyUp.bind(this)}\n        />\n        <ul> \n          {\n            this.state.list.map((value, index) =>{\n              return(\n                <li key={index}\n                  onClick={this.handleItemClick.bind(this, index)}>{value}</li>\n            )\n          })\n          }  \n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}