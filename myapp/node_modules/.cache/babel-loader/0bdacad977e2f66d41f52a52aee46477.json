{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chill\\\\OneDrive\\\\\\u684C\\u9762\\\\Project\\\\myapp\\\\src\\\\pages\\\\write\\\\index.js\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { LoginWrapper, LoginBox, Input, Button, Textarea, Dialog } from \"./style\";\nimport { actionCreators } from \"./store\";\nimport { Link } from \"react-router-dom\";\n\nclass Write extends PureComponent {\n  render() {\n    const {\n      postArticle,\n      postStatus\n    } = this.props; // if (loginStatus) {\n\n    return /*#__PURE__*/React.createElement(LoginWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"\\u6A19\\u984C\",\n      ref: dom => {\n        this.title = dom;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"\\u6B32\\u63D2\\u5165\\u4E4B\\u5716\\u7247\\u7DB2\\u5740 http://............\",\n      ref: dom => {\n        this.imgUrl = dom;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Textarea, {\n      placeholder: \"\\u6587\\u7AE0\\u5167\\u5BB9\",\n      ref: dom => {\n        this.content = dom;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.postStatus = true;\n        console.log(this.postStatus);\n        return postArticle(this.title.value, this.content.value, this.imgUrl.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"\\u767C\\u8868\\u6587\\u7AE0\"), postStatus == 1 ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      onClick: () => {\n        renewPostStatus();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"\\u767C\\u8868\\u6210\\u529F\\uFF0C\\u9EDE\\u64CA\\u8DF3\\u8F49\")) : null, postStatus == 2 ? /*#__PURE__*/React.createElement(Dialog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }\n    }, \"\\u767C\\u8868\\u5931\\u6557\\uFF0C\\u518D\\u8A66\\u4E00\\u6B21\") : null)); // } else {\n    //   return <Redirect to=\"/\" />;\n    // }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  postStatus: state.getIn([\"write\", \"postStatus\"])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postArticle(title, content, imgUrl) {\n    dispatch(actionCreators.postArticle(title, content, imgUrl));\n  },\n\n  renewPostStatus() {}\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Write);","map":{"version":3,"sources":["C:/Users/chill/OneDrive/桌面/Project/myapp/src/pages/write/index.js"],"names":["React","PureComponent","connect","Redirect","LoginWrapper","LoginBox","Input","Button","Textarea","Dialog","actionCreators","Link","Write","render","postArticle","postStatus","props","dom","title","imgUrl","content","console","log","value","renewPostStatus","mapStateToProps","state","getIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LoginWrapper, LoginBox, Input, Button,Textarea,Dialog } from \"./style\";\r\nimport { actionCreators } from \"./store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Write extends PureComponent {\r\n  render() {\r\n    const { postArticle, postStatus } = this.props;\r\n    // if (loginStatus) {\r\n      return (\r\n        <LoginWrapper>\r\n          <LoginBox>\r\n            <Input\r\n              placeholder=\"標題\"\r\n              ref={(dom) => {\r\n                this.title = dom;\r\n              }}\r\n            />\r\n            <Input\r\n              placeholder=\"欲插入之圖片網址 http://............\"\r\n              ref={(dom) => {\r\n                this.imgUrl = dom;\r\n              }}\r\n            />\r\n            <Textarea\r\n              placeholder=\"文章內容\"\r\n              ref={(dom) => {\r\n                this.content = dom;\r\n              }}\r\n            />\r\n            <Button\r\n              onClick={() => {\r\n                this.postStatus = true\r\n                console.log(this.postStatus)\r\n                return postArticle(\r\n                  this.title.value,\r\n                  this.content.value,\r\n                  this.imgUrl.value\r\n                )\r\n              }\r\n              }\r\n            >\r\n              發表文章\r\n            </Button>\r\n            {postStatus==1? (\r\n              <Link to=\"/\">\r\n                <Dialog onClick={()=>{renewPostStatus()}}>發表成功，點擊跳轉</Dialog>\r\n              </Link>\r\n            ) : null}\r\n            {postStatus == 2 ? <Dialog>發表失敗，再試一次</Dialog> : null}\r\n          </LoginBox>\r\n        </LoginWrapper>\r\n      );\r\n       \r\n    \r\n    // } else {\r\n    //   return <Redirect to=\"/\" />;\r\n    // }\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postStatus: state.getIn([\"write\", \"postStatus\"]),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postArticle(title, content, imgUrl) {\r\n    dispatch(actionCreators.postArticle(title, content, imgUrl))\r\n  },\r\n  renewPostStatus() {\r\n    \r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Write);\r\n"]},"metadata":{},"sourceType":"module"}