{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chill\\\\OneDrive\\\\\\u684C\\u9762\\\\Project\\\\myapp\\\\src\\\\pages\\\\write\\\\index.js\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LoginWrapper, LoginBox, Input, Button, Textarea, Dialog } from \"./style\";\nimport { actionCreators } from \"./store\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass Write extends PureComponent {\n  constructor(props) {\n    su;\n  }\n\n  changePostStatus() {\n    // const { postArticle, postStatus, renewPostStatus, login } = this.props;\n    if (postStatus === 1) return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 34\n      }\n    });\n  }\n\n  render() {\n    // const { postArticle, postStatus, renewPostStatus, login } = this.props;\n    if (login) {\n      return /*#__PURE__*/React.createElement(LoginWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoginBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"\\u6A19\\u984C\",\n        ref: dom => {\n          this.title = dom;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"\\u6B32\\u63D2\\u5165\\u4E4B\\u5716\\u7247\\u7DB2\\u5740 http://............\",\n        ref: dom => {\n          this.imgUrl = dom;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Textarea, {\n        placeholder: \"\\u6587\\u7AE0\\u5167\\u5BB9\",\n        ref: dom => {\n          this.content = dom;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          return postArticle(this.title.value, this.content.value, this.imgUrl.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"\\u767C\\u8868\\u6587\\u7AE0\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  postStatus: state.getIn([\"write\", \"postStatus\"]),\n  login: state.getIn([\"login\", \"login\"])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postArticle(title, content, imgUrl) {\n    dispatch(actionCreators.postArticle(title, content, imgUrl));\n  },\n\n  renewPostStatus() {\n    dispatch(actionCreators.postArticleAction(0));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Write);","map":{"version":3,"sources":["C:/Users/chill/OneDrive/桌面/Project/myapp/src/pages/write/index.js"],"names":["React","PureComponent","connect","LoginWrapper","LoginBox","Input","Button","Textarea","Dialog","actionCreators","Link","Redirect","Write","constructor","props","su","changePostStatus","postStatus","pathname","render","login","dom","title","imgUrl","content","postArticle","value","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","renewPostStatus","postArticleAction"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoginWrapper, LoginBox, Input, Button,Textarea,Dialog } from \"./style\";\r\nimport { actionCreators } from \"./store\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nclass Write extends PureComponent {\r\n\r\n  constructor(props) {\r\n    su\r\n  }\r\n\r\n  \r\n  changePostStatus() {\r\n    // const { postArticle, postStatus, renewPostStatus, login } = this.props;\r\n    if (postStatus === 1) return <Redirect to={{ pathname: \"/\" }} />;\r\n  }\r\n\r\n  render() {\r\n    // const { postArticle, postStatus, renewPostStatus, login } = this.props;\r\n\r\n    if (login) {\r\n      return (\r\n        <LoginWrapper>\r\n          <LoginBox>\r\n            <Input\r\n              placeholder=\"標題\"\r\n              ref={(dom) => {\r\n                this.title = dom;\r\n              }}\r\n            />\r\n            <Input\r\n              placeholder=\"欲插入之圖片網址 http://............\"\r\n              ref={(dom) => {\r\n                this.imgUrl = dom;\r\n              }}\r\n            />\r\n            <Textarea\r\n              placeholder=\"文章內容\"\r\n              ref={(dom) => {\r\n                this.content = dom;\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              onClick={() => {\r\n                return postArticle(\r\n                  this.title.value,\r\n                  this.content.value,\r\n                  this.imgUrl.value\r\n                );\r\n              }}\r\n            >\r\n              發表文章\r\n            </Button>\r\n            {/* {postStatus()} */}\r\n            {/* {postStatus==1? (\r\n              <Link to=\"/\">\r\n                <Dialog onClick={()=>renewPostStatus()}>成功，點擊跳轉首頁</Dialog>\r\n              </Link>\r\n            ) : null}\r\n            {postStatus == 2 ? <Dialog>發表失敗，再試一次</Dialog> : null} */}\r\n          </LoginBox>\r\n        </LoginWrapper>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postStatus: state.getIn([\"write\", \"postStatus\"]),\r\n  login: state.getIn([\"login\",\"login\"])\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postArticle(title, content, imgUrl) {\r\n    dispatch(actionCreators.postArticle(title, content, imgUrl))\r\n  },\r\n  renewPostStatus() {\r\n    dispatch(actionCreators.postArticleAction(0))\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Write);\r\n"]},"metadata":{},"sourceType":"module"}